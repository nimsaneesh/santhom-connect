import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:santhom_connect/core/utils/pref_utils.dart';
import 'package:santhom_connect/core/utils/size_utils.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.gray100,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(32.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray20001,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyMedium: TextStyle(
          color: colorScheme.secondaryContainer,
          fontSize: 14.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.blueGray400,
          fontSize: 12.fSize,
          fontFamily: 'Manrope',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: appTheme.indigo40002,
          fontSize: 36.fSize,
          fontFamily: 'Canela',
          fontWeight: FontWeight.w400,
        ),
        labelLarge: TextStyle(
          color: appTheme.blueGray900,
          fontSize: 13.fSize,
          fontFamily: 'Manrope',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: appTheme.blue700,
          fontSize: 11.fSize,
          fontFamily: 'Manrope',
          fontWeight: FontWeight.w600,
        ),
        titleLarge: TextStyle(
          color: appTheme.blueGray900,
          fontSize: 20.fSize,
          fontFamily: 'Manrope',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: colorScheme.onPrimary,
          fontSize: 18.fSize,
          fontFamily: 'Manrope',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.black900,
          fontSize: 15.fSize,
          fontFamily: 'Manrope',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF3F7AD3),
    secondaryContainer: Color(0XFF909090),

    // On colors(text colors)
    onPrimary: Color(0XFF272727),
    onPrimaryContainer: Color(0XFFDCDCF7),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue700 => Color(0XFF2F84C0);
  Color get blueA200 => Color(0XFF4197FD);

  // BlueGray
  Color get blueGray400 => Color(0XFF8B8B8B);
  Color get blueGray500 => Color(0XFF657785);
  Color get blueGray50001 => Color(0XFF647784);
  Color get blueGray600 => Color(0XFF5E6572);
  Color get blueGray700 => Color(0XFF515151);
  Color get blueGray900 => Color(0XFF2B2C43);
  Color get blueGray90001 => Color(0XFF2E2E2E);
  Color get blueGray90002 => Color(0XFF222B45);

  // BlueGrayAb
  Color get blueGray600Ab => Color(0XAB59667F);

  // DeepPurple
  Color get deepPurple100 => Color(0XFFD3D2FF);
  Color get deepPurpleA400 => Color(0XFF6D29F6);

  // Gray
  Color get gray100 => Color(0XFFF3F6FB);
  Color get gray200 => Color(0XFFEEEEEE);
  Color get gray20001 => Color(0XFFEBEBEB);
  Color get gray20002 => Color(0XFFEFEFEF);
  Color get gray300 => Color(0XFFE0E0E0);
  Color get gray400 => Color(0XFFBBBBBB);
  Color get gray500 => Color(0XFF9C9FA2);
  Color get gray600 => Color(0XFF717171);
  Color get gray60001 => Color(0XFF838383);
  Color get gray60002 => Color(0XFF767676);
  Color get gray80090 => Color(0X904F4F4F);

  // Grayc
  Color get gray6000c => Color(0X0C707070);

  // Indigo
  Color get indigo300 => Color(0XFF699DC5);
  Color get indigo400 => Color(0XFF4F8FCA);
  Color get indigo40001 => Color(0XFF5090CB);
  Color get indigo40002 => Color(0XFF488ABD);
  Color get indigo600 => Color(0XFF2D6B99);
  Color get indigoA700 => Color(0XFF3C3ADD);

  // LightBlue
  Color get lightBlue50 => Color(0XFFCEEAFF);
  Color get lightBlue500 => Color(0XFF00ACEA);
  Color get lightBlue900 => Color(0XFF1F6291);

  // Orange
  Color get orange700 => Color(0XFFEE8301);
  Color get orangeA200 => Color(0XFFFAA33A);
  Color get orangeA400 => Color(0XFFFF9310);
  Color get gray1007e => Color(0X7EF5F4F6);

  // Pink
  Color get pinkA400 => Color(0XFFE90064);
  Color get gray50 => Color(0XFFF9F9F9);
  // Red
  Color get red300 => Color(0XFFE46666);
  Color get blueA400 => Color(0XFF2C80FF);

  // Teal
  Color get teal500 => Color(0XFF00B383);

  // White
  Color get whiteA700 => Color(0XFFFDFDFD);
  Color get whiteA70001 => Color(0XFFFFFFFF);
  Color get blueGray300 => Color(0XFF8F9BB3);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
